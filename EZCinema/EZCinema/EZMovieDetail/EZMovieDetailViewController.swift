//
//  EZMovieDetailViewController.swift
//  EZCinema
//
//  Created by Edu on 17/07/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Nuke

final class EZMovieDetailViewController: UIViewController {

    // MARK: - Public properties 
    @IBOutlet weak var mMovieIMG: UIImageView!
    @IBOutlet weak var mTitleLB: UILabel!
    @IBOutlet weak var mGenresCV: UICollectionView!
    @IBOutlet weak var mSinoxisLB: UILabel!
    @IBOutlet weak var mSinoxisTV: UITextView!
    
    var presenter: EZMovieDetailPresenterInterface!
    private var mMovie: Movie?

    // MARK: - Lifecycle Methods
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupUI()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        self.presenter.onGetMovieDetail()
    }

    // MARK: - Private Methods
    private func setupUI() {
        
        self.setupNavBar(titleIn: "Detail", withBackBtn: true, colorBGIn: .baseViewBGColor, titleColorIn: .orangeColor)
        self.mGenresCV.register(UINib(nibName: "GenreCell", bundle: nil), forCellWithReuseIdentifier: "GenreCell")
        let mFL = UICollectionViewFlowLayout()
        mFL.estimatedItemSize = UICollectionViewFlowLayout.automaticSize
        mFL.scrollDirection = .horizontal
        self.mGenresCV.collectionViewLayout = mFL
        self.mGenresCV.contentInsetAdjustmentBehavior = .always
    }
    
    private func setUIInfo() {
        
        self.mTitleLB.text = self.mMovie?.mTitle
        self.mSinoxisLB.text = "Sinoxis \(self.mMovie?.mTitle ?? "")"
        self.mSinoxisTV.text = self.mMovie?.mOverview
        self.mGenresCV.reloadData()
        if let imgURL = URL(string: self.mMovie?.mPoster?.buildURLStringIMG() ?? "") {
            Nuke.loadImage(with: imgURL, options: self.buildNukeOP(), into: self.mMovieIMG)
        }
    }
    
    // MARK: - Public Methods

}

// MARK: - Extensions
extension EZMovieDetailViewController: EZMovieDetailViewInterface {
    
    func onSetMovieDetail(movieIn: Movie?) {
        self.mMovie = movieIn
        self.setUIInfo()
    }
}

extension EZMovieDetailViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return self.mMovie?.mGenreList?.count ?? 0
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        let mCell = collectionView.dequeueReusableCell(withReuseIdentifier: "GenreCell", for: indexPath) as! GenreCell
        mCell.setupCell(genreIn: self.mMovie?.mGenreList?[indexPath.row])
        
        return mCell
    }
    
    /*func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        
        return self.createGenreSizeCell(textIn: self.mMovie?.mGenreList?[indexPath.row].mName)
    }*/
}
