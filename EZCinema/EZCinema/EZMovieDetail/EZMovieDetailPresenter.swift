//
//  EZMovieDetailPresenter.swift
//  EZCinema
//
//  Created by Edu on 17/07/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class EZMovieDetailPresenter {

    // MARK: - Private properties
    private weak var view: EZMovieDetailViewInterface?
    private let interactor: EZMovieDetailInteractorInterface
    private let wireframe: EZMovieDetailWireframeInterface
    private var mMovie: Movie?

    // MARK: - Lifecycle
    init(view: EZMovieDetailViewInterface, interactor: EZMovieDetailInteractorInterface, wireframe: EZMovieDetailWireframeInterface, movieIn: Movie?) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.mMovie = movieIn
    }
    
    private func buildMovieGenreList(genreListIn: [Genre]) {
        
        self.mMovie?.mGenreList = []
        genreListIn.forEach { genreIn in
            self.mMovie?.mGenreListID?.forEach({ idIn in
                if genreIn.mID == idIn {
                    self.mMovie?.mGenreList?.append(genreIn)
                }
            })
        }
        
        self.view?.onSetMovieDetail(movieIn: self.mMovie)
    }
}

// MARK: - Extensions 
extension EZMovieDetailPresenter: EZMovieDetailPresenterInterface {
    
    //MARK: - Get Movie Details
    func onGetMovieDetail() {
        
        self.view?.onSetMovieDetail(movieIn: self.mMovie)
        self.view?.showLoading()
        self.interactor.getGenreList() { (resultIn) in
            
            DispatchQueue.main.async {
                self.view?.hideLoading()
                switch resultIn {
                case .success(let mResponse):
                    if let mList = mResponse.mGenreList {
                        self.buildMovieGenreList(genreListIn: mList)
                    }else{
                        self.view?.showAlert(title: "ERROR", description: "")
                    }
                case .failure(let errorIn):
                    self.view?.showAlert(title: "ERROR", description: errorIn.localizedDescription)
                }
            }
        }
    }
}
