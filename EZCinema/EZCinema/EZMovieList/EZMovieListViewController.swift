//
//  EZMovieListViewController.swift
//  EZCinema
//
//  Created by Edu on 17/07/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class EZMovieListViewController: UIViewController {

    // MARK: - Public properties
    @IBOutlet weak var mMovieListCV: UICollectionView!
    @IBOutlet weak var mMovieListTV: UITableView!
    
    var presenter: EZMovieListPresenterInterface!
    private var movieList: [Movie] = []
    private var upcomingList: [Movie] = []

    // MARK: - Lifecycle Methods
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupUI()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        self.presenter.onGetUpcomingList()
        self.presenter.onGetMovieList()
    }

    // MARK: - Private Methods
    private func setupUI() {
        
        self.setupNavBar(titleIn: "Movies", withBackBtn: false, colorBGIn: .baseViewBGColor, titleColorIn: .orangeColor)
        self.mMovieListCV.register(UINib(nibName: "MovieACell", bundle: nil), forCellWithReuseIdentifier: "MovieACell")
        self.mMovieListTV.register(UINib(nibName: "MovieBCell", bundle: nil), forCellReuseIdentifier: "MovieBCell")
    }
    
    // MARK: - Public Methods
}

// MARK: - Extensions
extension EZMovieListViewController: EZMovieListViewInterface {
    
    func onSetUpcomingList(movieListIn: [Movie]?) {
        self.upcomingList = movieListIn ?? []
        self.mMovieListCV.reloadData()
    }
    
    func onSetMovieList(movieListIn: [Movie]?) {
        self.movieList = movieListIn ?? []
        self.mMovieListTV.reloadData()
    }
}

extension EZMovieListViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return self.upcomingList.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        let mCell = collectionView.dequeueReusableCell(withReuseIdentifier: "MovieACell", for: indexPath) as! MovieACell
        mCell.setupCell(movieIn: self.upcomingList[indexPath.row])
        
        return mCell
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: 100, height: 200)
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        self.presenter.onMovieSelected(movieIn: self.upcomingList[indexPath.row])
    }
}

extension EZMovieListViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.movieList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let mCell = tableView.dequeueReusableCell(withIdentifier: "MovieBCell") as! MovieBCell
        mCell.setupCell(movieIn: self.movieList[indexPath.row])
        
        return mCell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.presenter.onMovieSelected(movieIn: self.movieList[indexPath.row])
    }
}
